# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pinochle_pb2 as pinochle__pb2


class PinochleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateGame = channel.unary_unary(
                '/claco.pinochle.PinochleService/CreateGame',
                request_serializer=pinochle__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=pinochle__pb2.CreateGameResponse.FromString,
                )
        self.GetGame = channel.unary_unary(
                '/claco.pinochle.PinochleService/GetGame',
                request_serializer=pinochle__pb2.GetGameRequest.SerializeToString,
                response_deserializer=pinochle__pb2.GetGameResponse.FromString,
                )
        self.ListGames = channel.unary_stream(
                '/claco.pinochle.PinochleService/ListGames',
                request_serializer=pinochle__pb2.ListGamesRequest.SerializeToString,
                response_deserializer=pinochle__pb2.Game.FromString,
                )
        self.StartGame = channel.unary_unary(
                '/claco.pinochle.PinochleService/StartGame',
                request_serializer=pinochle__pb2.StartGameRequest.SerializeToString,
                response_deserializer=pinochle__pb2.StartGameResponse.FromString,
                )


class PinochleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PinochleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGame,
                    request_deserializer=pinochle__pb2.CreateGameRequest.FromString,
                    response_serializer=pinochle__pb2.CreateGameResponse.SerializeToString,
            ),
            'GetGame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGame,
                    request_deserializer=pinochle__pb2.GetGameRequest.FromString,
                    response_serializer=pinochle__pb2.GetGameResponse.SerializeToString,
            ),
            'ListGames': grpc.unary_stream_rpc_method_handler(
                    servicer.ListGames,
                    request_deserializer=pinochle__pb2.ListGamesRequest.FromString,
                    response_serializer=pinochle__pb2.Game.SerializeToString,
            ),
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=pinochle__pb2.StartGameRequest.FromString,
                    response_serializer=pinochle__pb2.StartGameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'claco.pinochle.PinochleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PinochleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.pinochle.PinochleService/CreateGame',
            pinochle__pb2.CreateGameRequest.SerializeToString,
            pinochle__pb2.CreateGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.pinochle.PinochleService/GetGame',
            pinochle__pb2.GetGameRequest.SerializeToString,
            pinochle__pb2.GetGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/claco.pinochle.PinochleService/ListGames',
            pinochle__pb2.ListGamesRequest.SerializeToString,
            pinochle__pb2.Game.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.pinochle.PinochleService/StartGame',
            pinochle__pb2.StartGameRequest.SerializeToString,
            pinochle__pb2.StartGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
