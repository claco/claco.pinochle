// protolint:disable INDENT REPEATED_FIELD_NAMES_PLURALIZED
// protolint:disable ENUM_FIELD_NAMES_PREFIX ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
// protolint:disable ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pinochle.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardSuit int32

const (
	CardSuit_Unspecified CardSuit = 0
	CardSuit_Clubs       CardSuit = 1
	CardSuit_Diamonds    CardSuit = 2
	CardSuit_Hearts      CardSuit = 3
	CardSuit_Spades      CardSuit = 4
)

// Enum value maps for CardSuit.
var (
	CardSuit_name = map[int32]string{
		0: "Unspecified",
		1: "Clubs",
		2: "Diamonds",
		3: "Hearts",
		4: "Spades",
	}
	CardSuit_value = map[string]int32{
		"Unspecified": 0,
		"Clubs":       1,
		"Diamonds":    2,
		"Hearts":      3,
		"Spades":      4,
	}
)

func (x CardSuit) Enum() *CardSuit {
	p := new(CardSuit)
	*p = x
	return p
}

func (x CardSuit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardSuit) Descriptor() protoreflect.EnumDescriptor {
	return file_pinochle_proto_enumTypes[0].Descriptor()
}

func (CardSuit) Type() protoreflect.EnumType {
	return &file_pinochle_proto_enumTypes[0]
}

func (x CardSuit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardSuit.Descriptor instead.
func (CardSuit) EnumDescriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{0}
}

type GameStatus int32

const (
	GameStatus_New       GameStatus = 0
	GameStatus_Playing   GameStatus = 1
	GameStatus_Completed GameStatus = 2
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "New",
		1: "Playing",
		2: "Completed",
	}
	GameStatus_value = map[string]int32{
		"New":       0,
		"Playing":   1,
		"Completed": 2,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pinochle_proto_enumTypes[1].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_pinochle_proto_enumTypes[1]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{1}
}

type ServiceResultCode int32

const (
	ServiceResultCode_Ok    ServiceResultCode = 0
	ServiceResultCode_Error ServiceResultCode = 1
)

// Enum value maps for ServiceResultCode.
var (
	ServiceResultCode_name = map[int32]string{
		0: "Ok",
		1: "Error",
	}
	ServiceResultCode_value = map[string]int32{
		"Ok":    0,
		"Error": 1,
	}
)

func (x ServiceResultCode) Enum() *ServiceResultCode {
	p := new(ServiceResultCode)
	*p = x
	return p
}

func (x ServiceResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pinochle_proto_enumTypes[2].Descriptor()
}

func (ServiceResultCode) Type() protoreflect.EnumType {
	return &file_pinochle_proto_enumTypes[2]
}

func (x ServiceResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceResultCode.Descriptor instead.
func (ServiceResultCode) EnumDescriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{2}
}

type Board struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stock    []*Card `protobuf:"bytes,2,rep,name=stock,proto3" json:"stock,omitempty"`
	Discards []*Card `protobuf:"bytes,3,rep,name=discards,proto3" json:"discards,omitempty"`
	Melds    []*Meld `protobuf:"bytes,4,rep,name=melds,proto3" json:"melds,omitempty"`
}

func (x *Board) Reset() {
	*x = Board{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Board) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Board) ProtoMessage() {}

func (x *Board) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Board.ProtoReflect.Descriptor instead.
func (*Board) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{0}
}

func (x *Board) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Board) GetStock() []*Card {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *Board) GetDiscards() []*Card {
	if x != nil {
		return x.Discards
	}
	return nil
}

func (x *Board) GetMelds() []*Meld {
	if x != nil {
		return x.Melds
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suit   CardSuit `protobuf:"varint,1,opt,name=suit,proto3,enum=claco.pinochle.CardSuit" json:"suit,omitempty"`
	Symbol string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetSuit() CardSuit {
	if x != nil {
		return x.Suit
	}
	return CardSuit_Unspecified
}

func (x *Card) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type Deck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *Deck) Reset() {
	*x = Deck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck) ProtoMessage() {}

func (x *Deck) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck.ProtoReflect.Descriptor instead.
func (*Deck) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{2}
}

func (x *Deck) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug    string     `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name    string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Board   *Board     `protobuf:"bytes,4,opt,name=board,proto3" json:"board,omitempty"`
	Players []*Player  `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	Status  GameStatus `protobuf:"varint,6,opt,name=status,proto3,enum=claco.pinochle.GameStatus" json:"status,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{3}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Game) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Game) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_New
}

type Meld struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Meld) Reset() {
	*x = Meld{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meld) ProtoMessage() {}

func (x *Meld) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meld.ProtoReflect.Descriptor instead.
func (*Meld) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{4}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{5}
}

type PinochleServiceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  string           `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Detail *structpb.Struct `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *PinochleServiceEvent) Reset() {
	*x = PinochleServiceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinochleServiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinochleServiceEvent) ProtoMessage() {}

func (x *PinochleServiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinochleServiceEvent.ProtoReflect.Descriptor instead.
func (*PinochleServiceEvent) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{6}
}

func (x *PinochleServiceEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *PinochleServiceEvent) GetDetail() *structpb.Struct {
	if x != nil {
		return x.Detail
	}
	return nil
}

type PinochleServiceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ServiceResultCode       `protobuf:"varint,1,opt,name=code,proto3,enum=claco.pinochle.ServiceResultCode" json:"code,omitempty"`
	Message *string                 `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Events  []*PinochleServiceEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *PinochleServiceResult) Reset() {
	*x = PinochleServiceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinochleServiceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinochleServiceResult) ProtoMessage() {}

func (x *PinochleServiceResult) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinochleServiceResult.ProtoReflect.Descriptor instead.
func (*PinochleServiceResult) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{7}
}

func (x *PinochleServiceResult) GetCode() ServiceResultCode {
	if x != nil {
		return x.Code
	}
	return ServiceResultCode_Ok
}

func (x *PinochleServiceResult) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *PinochleServiceResult) GetEvents() []*PinochleServiceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateGameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PinochleServiceResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Game   *Game                  `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{9}
}

func (x *CreateGameResponse) GetResult() *PinochleServiceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type GetGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{10}
}

func (x *GetGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGameRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PinochleServiceResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Game   *Game                  `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GetGameResponse) Reset() {
	*x = GetGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameResponse) ProtoMessage() {}

func (x *GetGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameResponse.ProtoReflect.Descriptor instead.
func (*GetGameResponse) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{11}
}

func (x *GetGameResponse) GetResult() *PinochleServiceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type ListGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGamesRequest) Reset() {
	*x = ListGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesRequest) ProtoMessage() {}

func (x *ListGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesRequest.ProtoReflect.Descriptor instead.
func (*ListGamesRequest) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{12}
}

type ResumeGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *ResumeGameRequest) Reset() {
	*x = ResumeGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeGameRequest) ProtoMessage() {}

func (x *ResumeGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeGameRequest.ProtoReflect.Descriptor instead.
func (*ResumeGameRequest) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{13}
}

func (x *ResumeGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResumeGameRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type ResumeGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PinochleServiceResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Game   *Game                  `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *ResumeGameResponse) Reset() {
	*x = ResumeGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeGameResponse) ProtoMessage() {}

func (x *ResumeGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeGameResponse.ProtoReflect.Descriptor instead.
func (*ResumeGameResponse) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{14}
}

func (x *ResumeGameResponse) GetResult() *PinochleServiceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResumeGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type StartGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{15}
}

func (x *StartGameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartGameRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type StartGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PinochleServiceResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Game   *Game                  `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pinochle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pinochle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_pinochle_proto_rawDescGZIP(), []int{16}
}

func (x *StartGameResponse) GetResult() *PinochleServiceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *StartGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

var File_pinochle_proto protoreflect.FileDescriptor

var file_pinochle_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a,
	0x05, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69,
	0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e,
	0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f,
	0x63, 0x68, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x6d, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x4c, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x75, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70,
	0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x69, 0x74,
	0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x32,
	0x0a, 0x04, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69,
	0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x30, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68,
	0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x4d, 0x65, 0x6c, 0x64, 0x22, 0x08,
	0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x14, 0x50, 0x69, 0x6e, 0x6f,
	0x63, 0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x50, 0x69, 0x6e, 0x6f,
	0x63, 0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x35, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e,
	0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x37, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c,
	0x65, 0x2e, 0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x28, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22,
	0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x37, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x7d, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e,
	0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c,
	0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22,
	0x7c, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e,
	0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68,
	0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x2a, 0x4c, 0x0a,
	0x08, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x69, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c,
	0x75, 0x62, 0x73, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x73, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x72, 0x74, 0x73, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x70, 0x61, 0x64, 0x65, 0x73, 0x10, 0x04, 0x2a, 0x31, 0x0a, 0x0a, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x65, 0x77,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x26,
	0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x32, 0x94, 0x04, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f,
	0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6c,
	0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63,
	0x68, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x55, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69,
	0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e,
	0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x0e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x6f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e,
	0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x12, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x12, 0x6b, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e,
	0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x6c, 0x61, 0x63, 0x6f, 0x2e, 0x70, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x15, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0xaa, 0x02, 0x0c, 0x50, 0x69, 0x6e, 0x6f, 0x63, 0x68, 0x6c, 0x65,
	0x2e, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pinochle_proto_rawDescOnce sync.Once
	file_pinochle_proto_rawDescData = file_pinochle_proto_rawDesc
)

func file_pinochle_proto_rawDescGZIP() []byte {
	file_pinochle_proto_rawDescOnce.Do(func() {
		file_pinochle_proto_rawDescData = protoimpl.X.CompressGZIP(file_pinochle_proto_rawDescData)
	})
	return file_pinochle_proto_rawDescData
}

var file_pinochle_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pinochle_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pinochle_proto_goTypes = []interface{}{
	(CardSuit)(0),                 // 0: claco.pinochle.CardSuit
	(GameStatus)(0),               // 1: claco.pinochle.GameStatus
	(ServiceResultCode)(0),        // 2: claco.pinochle.ServiceResultCode
	(*Board)(nil),                 // 3: claco.pinochle.Board
	(*Card)(nil),                  // 4: claco.pinochle.Card
	(*Deck)(nil),                  // 5: claco.pinochle.Deck
	(*Game)(nil),                  // 6: claco.pinochle.Game
	(*Meld)(nil),                  // 7: claco.pinochle.Meld
	(*Player)(nil),                // 8: claco.pinochle.Player
	(*PinochleServiceEvent)(nil),  // 9: claco.pinochle.PinochleServiceEvent
	(*PinochleServiceResult)(nil), // 10: claco.pinochle.PinochleServiceResult
	(*CreateGameRequest)(nil),     // 11: claco.pinochle.CreateGameRequest
	(*CreateGameResponse)(nil),    // 12: claco.pinochle.CreateGameResponse
	(*GetGameRequest)(nil),        // 13: claco.pinochle.GetGameRequest
	(*GetGameResponse)(nil),       // 14: claco.pinochle.GetGameResponse
	(*ListGamesRequest)(nil),      // 15: claco.pinochle.ListGamesRequest
	(*ResumeGameRequest)(nil),     // 16: claco.pinochle.ResumeGameRequest
	(*ResumeGameResponse)(nil),    // 17: claco.pinochle.ResumeGameResponse
	(*StartGameRequest)(nil),      // 18: claco.pinochle.StartGameRequest
	(*StartGameResponse)(nil),     // 19: claco.pinochle.StartGameResponse
	(*structpb.Struct)(nil),       // 20: google.protobuf.Struct
}
var file_pinochle_proto_depIdxs = []int32{
	4,  // 0: claco.pinochle.Board.stock:type_name -> claco.pinochle.Card
	4,  // 1: claco.pinochle.Board.discards:type_name -> claco.pinochle.Card
	7,  // 2: claco.pinochle.Board.melds:type_name -> claco.pinochle.Meld
	0,  // 3: claco.pinochle.Card.suit:type_name -> claco.pinochle.CardSuit
	4,  // 4: claco.pinochle.Deck.cards:type_name -> claco.pinochle.Card
	3,  // 5: claco.pinochle.Game.board:type_name -> claco.pinochle.Board
	8,  // 6: claco.pinochle.Game.players:type_name -> claco.pinochle.Player
	1,  // 7: claco.pinochle.Game.status:type_name -> claco.pinochle.GameStatus
	20, // 8: claco.pinochle.PinochleServiceEvent.detail:type_name -> google.protobuf.Struct
	2,  // 9: claco.pinochle.PinochleServiceResult.code:type_name -> claco.pinochle.ServiceResultCode
	9,  // 10: claco.pinochle.PinochleServiceResult.events:type_name -> claco.pinochle.PinochleServiceEvent
	10, // 11: claco.pinochle.CreateGameResponse.result:type_name -> claco.pinochle.PinochleServiceResult
	6,  // 12: claco.pinochle.CreateGameResponse.game:type_name -> claco.pinochle.Game
	10, // 13: claco.pinochle.GetGameResponse.result:type_name -> claco.pinochle.PinochleServiceResult
	6,  // 14: claco.pinochle.GetGameResponse.game:type_name -> claco.pinochle.Game
	10, // 15: claco.pinochle.ResumeGameResponse.result:type_name -> claco.pinochle.PinochleServiceResult
	6,  // 16: claco.pinochle.ResumeGameResponse.game:type_name -> claco.pinochle.Game
	10, // 17: claco.pinochle.StartGameResponse.result:type_name -> claco.pinochle.PinochleServiceResult
	6,  // 18: claco.pinochle.StartGameResponse.game:type_name -> claco.pinochle.Game
	11, // 19: claco.pinochle.PinochleService.CreateGame:input_type -> claco.pinochle.CreateGameRequest
	13, // 20: claco.pinochle.PinochleService.GetGame:input_type -> claco.pinochle.GetGameRequest
	15, // 21: claco.pinochle.PinochleService.ListGames:input_type -> claco.pinochle.ListGamesRequest
	16, // 22: claco.pinochle.PinochleService.ResumeGame:input_type -> claco.pinochle.ResumeGameRequest
	18, // 23: claco.pinochle.PinochleService.StartGame:input_type -> claco.pinochle.StartGameRequest
	12, // 24: claco.pinochle.PinochleService.CreateGame:output_type -> claco.pinochle.CreateGameResponse
	14, // 25: claco.pinochle.PinochleService.GetGame:output_type -> claco.pinochle.GetGameResponse
	6,  // 26: claco.pinochle.PinochleService.ListGames:output_type -> claco.pinochle.Game
	17, // 27: claco.pinochle.PinochleService.ResumeGame:output_type -> claco.pinochle.ResumeGameResponse
	19, // 28: claco.pinochle.PinochleService.StartGame:output_type -> claco.pinochle.StartGameResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pinochle_proto_init() }
func file_pinochle_proto_init() {
	if File_pinochle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pinochle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Board); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meld); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinochleServiceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinochleServiceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pinochle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pinochle_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pinochle_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pinochle_proto_goTypes,
		DependencyIndexes: file_pinochle_proto_depIdxs,
		EnumInfos:         file_pinochle_proto_enumTypes,
		MessageInfos:      file_pinochle_proto_msgTypes,
	}.Build()
	File_pinochle_proto = out.File
	file_pinochle_proto_rawDesc = nil
	file_pinochle_proto_goTypes = nil
	file_pinochle_proto_depIdxs = nil
}
